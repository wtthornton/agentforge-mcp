{
  "permissions": {
    "allow": [
      "**/*",
      "Bash(mvn test:*)",
      "Bash(java:*)",
      "Bash(apt:*)",
      "Bash(cd:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(echo:*)",
      "Bash(mkdir:*)",
      "Bash(rm:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(which:*)",
      "Bash(grep:*)",
      "Bash(pwd:*)",
      "Bash(env:*)",
      "Bash(export:*)",
      "Bash(source:*)",
      "Bash(./*)",
      "Bash(*.sh)",
      "Bash(*.js)",
      "Bash(*.py)",
      "Bash(*.java)",
      "Bash(*.xml)",
      "Bash(*.yml)",
      "Bash(*.yaml)",
      "Bash(*.sql)",
      "Bash(*.md)",
      "Bash(*.ts)",
      "Bash(*.tsx)",
      "Bash(*.jsx)",
      "Bash(*.css)",
      "Bash(*.html)",
      "Bash(npm run lint)",
      "Bash(npm install:*)",
      "Bash(npm run lint:*)",
      "Bash(npm:*)",
      "Bash(node:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(docker exec:*)",
      "Bash(mvn compile:*)"
    ],
    "deny": []
  },
  "automaticExecution": {
    "enabled": true,
    "fileOperations": {
      "create": true,
      "edit": true,
      "delete": true,
      "rename": true,
      "move": true
    },
    "terminalCommands": {
      "enabled": true,
      "requireConfirmation": false,
      "allowedCommands": [
        "node",
        "npm",
        "yarn",
        "pnpm",
        "java",
        "mvn",
        "mvnw",
        "docker",
        "docker-compose",
        "git",
        "cd",
        "ls",
        "cat",
        "echo",
        "mkdir",
        "rm",
        "cp",
        "mv",
        "chmod",
        "chown",
        "which",
        "grep",
        "pwd",
        "env",
        "export",
        "source",
        "apt",
        "apt-get",
        "apt-cache",
        "dpkg",
        "snap",
        "brew",
        "choco",
        "winget",
        "powershell",
        "pwsh",
        "cmd",
        "bash",
        "sh",
        "zsh",
        "fish",
        "tcsh",
        "ksh"
      ],
      "commandPatterns": [
        "mvn *",
        "java *",
        "node *",
        "npm *",
        "yarn *",
        "pnpm *",
        "docker *",
        "git *",
        "cd *",
        "ls *",
        "cat *",
        "echo *",
        "mkdir *",
        "rm *",
        "cp *",
        "mv *",
        "chmod *",
        "chown *",
        "which *",
        "grep *",
        "pwd *",
        "env *",
        "export *",
        "source *",
        "apt *",
        "apt-get *",
        "apt-cache *",
        "dpkg *",
        "snap *",
        "brew *",
        "choco *",
        "winget *",
        "powershell *",
        "pwsh *",
        "cmd *",
        "bash *",
        "sh *",
        "zsh *",
        "fish *",
        "tcsh *",
        "ksh *",
        "./*",
        "*.sh",
        "*.js",
        "*.py",
        "*.java",
        "*.xml",
        "*.yml",
        "*.yaml",
        "*.sql",
        "*.md",
        "*.ts",
        "*.tsx",
        "*.jsx",
        "*.css",
        "*.html"
      ]
    },
    "codeGeneration": {
      "enabled": true,
      "autoApply": true,
      "requireReview": false
    },
    "bashCommands": {
      "enabled": true,
      "requireConfirmation": false,
      "allowedPatterns": [
        "mvn *",
        "java *",
        "cd *",
        "ls *",
        "cat *",
        "echo *",
        "mkdir *",
        "rm *",
        "cp *",
        "mv *",
        "chmod *",
        "chown *",
        "which *",
        "grep *",
        "pwd *",
        "env *",
        "export *",
        "source *",
        "apt *",
        "apt-get *",
        "apt-cache *",
        "dpkg *",
        "snap *",
        "brew *",
        "choco *",
        "winget *",
        "powershell *",
        "pwsh *",
        "cmd *",
        "bash *",
        "sh *",
        "zsh *",
        "fish *",
        "tcsh *",
        "ksh *",
        "./*",
        "*.sh",
        "*.js",
        "*.py",
        "*.java",
        "*.xml",
        "*.yml",
        "*.yaml",
        "*.sql",
        "*.md",
        "*.ts",
        "*.tsx",
        "*.jsx",
        "*.css",
        "*.html"
      ]
    }
  },
  "projectContext": {
    "name": "AgentForge",
    "type": "static-analyzer",
    "description": "Static analyzer and project setup/migration utility following Agent OS development standards",
    "constraints": [
      "NO AI suggestion features - Static analyzer only",
      "NO dynamic AI processing - No real-time AI analysis",
      "NO AI-driven automation - No AI-controlled workflows",
      "NO machine learning features - No ML model training or inference",
      "NO AI chat interfaces - No conversational AI features"
    ],
    "standards": {
      "cursorRules": ".cursor/rules/",
      "agentOSStandards": ".agent-os/standards/",
      "enforcement": ".agent-os/standards/enforcement.md",
      "featureScoring": ".agent-os/standards/feature-scoring.md"
    },
    "architecture": {
      "backend": "Spring Boot 3.3+ (Java 21 LTS) with Controller → Service → Repository pattern",
      "frontend": "React 19 with TypeScript 5, functional components and hooks",
      "database": "PostgreSQL 17 with pgvector extension",
      "containerization": "Docker 24 with multi-stage builds"
    },
    "coreComponents": [
      "Logging Service - Centralized logging with Agent OS standards compliance",
      "Monitoring Service - System metrics, health checks, and performance monitoring",
      "Reporting Service - Compliance reports and project analysis summaries",
      "Project Analysis Service - Project structure analysis and technology stack detection"
    ]
  },
  "developmentWorkflow": {
    "mandatorySteps": [
      "Run compliance check after any changes: node .agent-os/tools/compliance-checker.js --detailed",
      "Score all features using 4-dimension framework before development",
      "Reference Context7 for technology validation",
      "Follow Controller → Service → Repository pattern",
      "Update tasks.md immediately after each subtask"
    ],
    "qualityGates": {
      "codeQuality": "≤5 TODO items per service",
      "performance": "TTI ≤1.8s frontend, P95 ≤150ms backend",
      "security": "0 vulnerabilities, 100% compliance",
      "architecture": "Controller → Service → Repository pattern enforced",
      "context7Compliance": "100% - All technology choices validated against Context7"
    }
  },
  "fileAccess": {
    "readAccess": [
      "**/*"
    ],
    "writeAccess": [
      "**/*"
    ],
    "executeAccess": [
      "**/*"
    ]
  },
  "integration": {
    "cursorRules": {
      "enabled": true,
      "path": ".cursor/rules/",
      "autoLoad": true,
      "enforceCompliance": true
    },
    "agentOS": {
      "enabled": true,
      "path": ".agent-os/",
      "autoLoad": true,
      "enforceStandards": true
    },
    "context7": {
      "enabled": true,
      "priority": "mandatory",
      "useFor": [
        "technology validation",
        "best practices",
        "documentation"
      ]
    }
  },
  "compliance": {
    "enforcement": {
      "enabled": true,
      "autoCheck": true,
      "requiredScore": 85,
      "failOnViolation": false
    },
    "featureScoring": {
      "enabled": true,
      "framework": "4-dimension",
      "requiredBeforeDevelopment": true,
      "autoCalculate": true
    }
  },
  "performance": {
    "targets": {
      "backendResponseTime": "P95 ≤200ms",
      "frontendTimeToInteractive": "≤1.8s",
      "analysisSpeed": "≤30 seconds for 1000 LOC",
      "memoryUsage": "≤512MB for large projects"
    }
  },
  "automation": {
    "enabled": true,
    "autoComplianceCheck": true,
    "autoFeatureScoring": true,
    "autoContext7Validation": true,
    "autoStandardsEnforcement": true,
    "autoQualityGates": true,
    "autoBashExecution": true,
    "autoCommandExecution": true,
    "autoFileOperations": true,
    "autoMavenExecution": true,
    "autoJavaExecution": true,
    "autoPackageManagement": true,
    "autoSystemCommands": true,
    "autoDevelopmentTools": true
  },
  "commandPermissionsFile": ".claude/command-permissions.json",
  "noPromptConfigFile": ".claude/no-prompt-config.json",
  "commandExecution": {
    "bash": {
      "enabled": true,
      "requireConfirmation": false,
      "autoExecute": true,
      "allowedPatterns": [
        "mvn *",
        "java *",
        "cd *",
        "ls *",
        "cat *",
        "echo *",
        "mkdir *",
        "rm *",
        "cp *",
        "mv *",
        "chmod *",
        "chown *",
        "which *",
        "grep *",
        "pwd *",
        "env *",
        "export *",
        "source *",
        "apt *",
        "apt-get *",
        "apt-cache *",
        "dpkg *",
        "snap *",
        "brew *",
        "choco *",
        "winget *",
        "powershell *",
        "pwsh *",
        "cmd *",
        "bash *",
        "sh *",
        "zsh *",
        "fish *",
        "tcsh *",
        "ksh *",
        "./*",
        "*.sh",
        "*.js",
        "*.py",
        "*.java",
        "*.xml",
        "*.yml",
        "*.yaml",
        "*.sql",
        "*.md",
        "*.ts",
        "*.tsx",
        "*.jsx",
        "*.css",
        "*.html"
      ]
    },
    "powershell": {
      "enabled": true,
      "requireConfirmation": false,
      "autoExecute": true,
      "allowedPatterns": [
        "Get-*",
        "Set-*",
        "New-*",
        "Remove-*",
        "Copy-*",
        "Move-*",
        "cd *",
        "ls *",
        "cat *",
        "echo *",
        "mkdir *",
        "rm *",
        "cp *",
        "mv *",
        "chmod *",
        "chown *",
        "which *",
        "grep *",
        "pwd *",
        "env *",
        "export *",
        "source *",
        "apt *",
        "apt-get *",
        "apt-cache *",
        "dpkg *",
        "snap *",
        "brew *",
        "choco *",
        "winget *",
        "powershell *",
        "pwsh *",
        "cmd *",
        "bash *",
        "sh *",
        "zsh *",
        "fish *",
        "tcsh *",
        "ksh *",
        "./*",
        "*.sh",
        "*.js",
        "*.py",
        "*.java",
        "*.xml",
        "*.yml",
        "*.yaml",
        "*.sql",
        "*.md",
        "*.ts",
        "*.tsx",
        "*.jsx",
        "*.css",
        "*.html"
      ]
    }
  }
}