# AgentForge Backend Application Configuration
# Environment: Development

spring:
  application:
    name: agentforge-backend
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/agentforge?prepareThreshold=0&preparedStatementCacheQueries=256&preparedStatementCacheSizeMiB=5&defaultRowFetchSize=1000
    username: ${DB_USERNAME:agentforge}
    password: ${DB_PASSWORD:agentforge}
    driver-class-name: org.postgresql.Driver
    hikari:
      # Optimized connection pool settings
      maximum-pool-size: ${DB_POOL_MAX_SIZE:30}
      minimum-idle: ${DB_POOL_MIN_IDLE:10}
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 900000
      # Performance optimizations
      connection-test-query: SELECT 1
      validation-timeout: 5000
      leak-detection-threshold: 30000
      connection-init-sql: |
        SET application_name = 'agentforge-backend';
        SET default_transaction_isolation = 'read committed';
        SET shared_preload_libraries = 'pg_stat_statements';
      initialization-fail-timeout: 10000
      # Enhanced connection validation
      validation-interval: 15000
      # Optimized connection pool behavior
      auto-commit: false
      read-only: false
      # Advanced performance settings
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: ${DEBUG:false}
        show_sql: ${DEBUG:false}
        # Performance optimizations
        jdbc:
          batch_size: 100
          fetch_size: 50
          time_zone: UTC
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        # Query optimization
        query:
          plan_cache_max_size: 2048
          plan_parameter_metadata_max_size: 128
        # Connection and transaction optimization
        connection:
          provider_disables_autocommit: true
          autocommit: false
        # Cache configuration
        cache:
          use_second_level_cache: false
          use_query_cache: false
        # Statement processing optimization
        generate_statistics: ${HIBERNATE_STATS:false}
        session_factory_name_is_jndi: false
  
  # Redis Configuration - Disabled for now to focus on database connectivity
  # data:
  #   redis:
  #     host: ${REDIS_HOST:localhost}
  #     port: ${REDIS_PORT:6379}
  #     password: ${REDIS_PASSWORD:redis}
  #     database: 0
  #     timeout: 2000ms
  #     lettuce:
  #       pool:
  #         max-active: 20
  #         max-idle: 10
  #         min-idle: 5
  #         max-wait: 1000ms
  
  # Security Configuration
  security:
    user:
      name: ${ADMIN_USERNAME:admin}
      password: ${ADMIN_PASSWORD:admin}
      roles: ADMIN
  
  # Jackson Configuration
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    time-zone: UTC
  
  # Cache Configuration
  cache:
    type: simple

# Server Configuration
server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${ENVIRONMENT:development}

# Logging Configuration
logging:
  level:
    root: INFO
    com.agentforge: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: ${DEBUG:false}
    org.hibernate.type.descriptor.sql.BasicBinder: ${DEBUG:false}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/agentforge-backend.log
    max-size: 100MB
    max-history: 30

# AI Configuration
ai:
  openai:
    api-key: ${OPENAI_API_KEY:}
    model: gpt-4o
    max-tokens: 4000
    temperature: 0.7
    timeout: 30000
  langchain:
    enabled: true
    model-provider: openai
    embedding-model: text-embedding-3-small
    vector-dimension: 1536

# Database Vector Configuration
vector:
  pgvector:
    enabled: true
    dimension: 1536
    similarity-metric: cosine

# Time Series Database Configuration
influxdb:
  url: ${INFLUXDB_URL:http://localhost:8086}
  token: ${INFLUXDB_TOKEN:}
  org: ${INFLUXDB_ORG:agentforge}
  bucket: ${INFLUXDB_BUCKET:agentforge-metrics}
  retention-policy: 30d

# Feature Flags
features:
  ai-generation: true
  ai-analysis: true
  compliance-checking: true
  real-time-monitoring: true
  advanced-analytics: true

# Performance Configuration
performance:
  async:
    core-pool-size: 10
    max-pool-size: 50
    queue-capacity: 100
    keep-alive-seconds: 60
  cache:
    default-ttl: 3600
    max-size: 1000

# Security Configuration
security:
  jwt:
    secret: ${JWT_SECRET:your-secret-key-change-in-production}
    expiration: 86400000 # 24 hours
    refresh-expiration: 604800000 # 7 days
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:5173,http://localhost:3000}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600

# Monitoring Configuration
monitoring:
  metrics:
    enabled: true
    collection-interval: 60000 # 1 minute
  tracing:
    enabled: true
    sampling-rate: 0.1
  alerting:
    enabled: true
    webhook-url: ${ALERT_WEBHOOK_URL:}

# Development Configuration
development:
  debug: ${DEBUG:false}
  hot-reload: true
  mock-data: ${MOCK_DATA:false}
  test-mode: false
